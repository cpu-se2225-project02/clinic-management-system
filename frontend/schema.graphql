### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Appointment {
  doc_id: Int!
  dt_end: String!
  dt_start: String!
  id: Int!
  name: String!
  patient: Patient
}

input AppointmentInput {
  doc_id: Int!
  dt_end: String!
  dt_start: String!
  name: String!
  patient_id: Int!
}

type Doctor {
  appointments: [Appointment!]!
  doc_name: String!
  id: Int!
}

type Mutation {
  addAppointment(newAppointment: AppointmentInput!): Appointment
  addPatient(newPatient: PatientInput!): Patient
  addPrescription(newPrescription: PrescriptionInput!): Prescription
  deletePatient(patientId: Int!): Patient
  deletePrescription(prescriptionId: Int!): Prescription
  editPatient(editedPatient: PatientInput!, patientId: Int!): Patient
  editPrescription(editedPrescription: PrescriptionInput!, prescriptionId: Int!): Prescription
}

type Patient {
  address: String!
  age: Int!
  appointments: [Appointment]
  birthdate: String!
  f_name: String!
  id: Int!
  l_name: String!
  m_initial: String
  sex: String!
  suffix: String
}

input PatientInput {
  address: String!
  age: Int!
  birthdate: String!
  f_name: String!
  l_name: String!
  m_initial: String
  sex: String!
  suffix: String
}

type Prescription {
  pres_dos: Int!
  pres_name: String!
}

input PrescriptionInput {
  pres_dos: Int!
  pres_name: String!
}

type Query {
  allDoctors: [Doctor]
  appointments: [Appointment]
  helloWorld: String
  hi: String
  patients: [Patient]
  prescriptions: [Prescription]
  specificPatient(patientId: Int!): Patient
  specificPrescription(patientId: Int!): Prescription
}